name: Build with ESP-IDF

on:
  push:
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: esp-idf build
      uses: espressif/esp-idf-ci-action@v1
      with:
        esp_idf_version: v4.4.4
        target: esp32
        path: './'
      env:
        WIFI_SSID: ${{ secrets.WIFI_SSID }}
        WIFI_PASS: ${{ secrets.WIFI_PASS }}
        PSK_ID: ${{ secrets.PSK_ID }}
        PSK: ${{ secrets.PSK }}
    - name: store built artifact
      uses: actions/upload-artifact@v3
      with:
        name: firmware.bin
        path: build/esp-air-quality-monitor.bin
  deploy:
    if: ${{ github.event_name != 'pull_request' }}
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install goliothctl
        run: |
          echo "deb [trusted=yes] https://repos.golioth.io/apt/ /" | sudo tee /etc/apt/sources.list.d/golioth.list
          sudo apt update
          sudo apt install goliothctl
      - name: Setup goliothctl
        run: |
          goliothctl login --apiKey ${{ secrets.GOLIOTH_API_KEY }} --projectId ${{ secrets.GOLIOTH_PROJECT_ID }}
      - uses: actions/download-artifact@v3
        with:
          name: firmware.bin

      - name: Get latest release version number
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Upload binary to Golioth (create artifact)
        run: |
          goliothctl dfu artifact create esp-air-quality-monitor/firmware.bin --version ${{ steps.get_version.outputs.version-without-v }}